// Generated by CoffeeScript 1.6.3
(function() {
  var Author, Change, Resource, Revision, Store;

  Resource = (function() {
    function Resource(path, contents, latest) {
      this.path = path;
      this.contents = contents != null ? contents : null;
      this.latest = latest != null ? latest : null;
    }

    Resource.prototype.getContents = function(store, cb) {
      return this.contents || store.read(this.path, cb);
    };

    Resource.prototype.getLatest = function(store, cb) {
      return this.latest || store.latest(this.path, cb);
    };

    return Resource;

  })();

  Author = (function() {
    function Author(name, email) {
      this.name = name;
      this.email = email;
    }

    Author.prototype.toString = function() {
      return "" + this.name + " <" + this.email + ">";
    };

    return Author;

  })();

  Change = (function() {
    function Change(added, deleted, modified) {
      this.added = added;
      this.deleted = deleted;
      this.modified = modified;
    }

    return Change;

  })();

  Revision = (function() {
    function Revision(path, id, time, author, message, changes) {
      this.path = path;
      this.id = id;
      this.time = time;
      this.author = author;
      this.message = message;
      this.changes = changes;
    }

    Revision.prototype.getContents = function(store) {};

    return Revision;

  })();

  Store = (function() {
    function Store(options, callback) {}

    Store.prototype.save = function(path, contents, author, message, callback) {};

    Store.prototype.read = function(path, id, callback) {};

    Store.prototype.retrieve = function(id, callback) {};

    Store.prototype.remove = function(path, callback) {};

    Store.prototype.move = function(fromPath, toPath) {};

    Store.prototype.list = function(directory) {};

    Store.prototype.search = function(pattern) {};

    return Store;

  })();

  module.exports = {
    Store: Store,
    Author: Author,
    Change: Change,
    Resource: Resource,
    Revision: Revision
  };

}).call(this);
